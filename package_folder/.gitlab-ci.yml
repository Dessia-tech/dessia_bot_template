# Gitlab CI configuration file for the package.
# You can use your own specific runner tags and images by changing the values in the tags and image fields

stages:
  - verify
  - check
  - test
  - build


# Verify that the changelog has been updated
verify_changelog_update:
  stage: verify
  tags:
    - dessia_ubuntu
  image: python:3.9
  script:
    - git remote set-url origin $CI_REPOSITORY_URL
    - if [ "$(git rev-parse --is-shallow-repository)" = "true" ]; then
        git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME --unshallow;
      else
        git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME;
      fi
    - git fetch origin $CI_COMMIT_REF_NAME
    - if git diff --name-only origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME...origin/$CI_COMMIT_REF_NAME | grep -q 'CHANGELOG.md'; then echo "Changelog has been updated"; else echo "CHANGELOG.md has not been updated. Update it for the PR to be accepted in CI."; exit 1; fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'


# Check pre-commit hooks
check_pre_commit:
  stage: check
  tags:
    - dessia_ubuntu
  image: python:3.9
  script:
    - pip install pre-commit shellcheck-py
    - pre-commit run -a
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'


# Test the package with unittests and run scripts, and generate coverage report
install_run_scripts_and_unittests:
  stage: test
  tags:
    - dessia_ubuntu
  image: python:3.9
  script:
    - git fetch --tags
    - apt-get update && apt-get install -y libgl1
    - python3 -m pip install --upgrade pip
    - pip install git+https://github.com/Dessia-tech/dessia_common.git
    - pip install git+https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.com/dessia/sdk/volmdlr.git
    - pip install -e .[doc,test]
    - pip install coverage tomli
    - python3 test.py
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'


# Generate dist wheel and source distribution on master branch
generate_dist_wheel:
  stage: build
  tags:
    - dessia_ubuntu
  image: python:3.9
  script:
    - pip install setuptools wheel
    - python setup.py sdist bdist_wheel
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "testing"'
    - if: '$CI_COMMIT_TAG'
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz
